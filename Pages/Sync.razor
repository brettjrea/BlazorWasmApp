@page "/sync"
@inject ISyncLocalStorageService localStorage

<h1>Non Async Local Storage</h1>

<div class="row mb-5">

    <div class="col-md-4">
        <h5>Add Item to local storage</h5>
        <div class="input-group">
            <input class="form-control" type="text" placeholder="Enter a value" @bind="Name" />
            <div class="input-group-append">
                <button class="btn btn-primary" @onclick="SaveName">Save</button>
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <h5>Remove item from local storage</h5>
        <button class="btn btn-primary" @onclick="RemoveName">Remove Item</button>
    </div>

    <div class="col-md-4">
        <h5>Clear local storage</h5>
        <button class="btn btn-primary" @onclick="ClearLocalStorage">Clear All</button>
    </div>
</div>

<div class="row">

    <div class="col-md-4">
        <h5>Value Read from local storage</h5>
        @NameFromLocalStorage
    </div>

    <div class="col-md-4">
        <h5>Items in local storage</h5>
        @ItemsInLocalStorage
    </div>
    <div class="col-md-4">
        <h5>Item exist in local storage</h5>@(ItemExist)
    </div>
</div>

<div class="row">

    <div class="col-md-4">
        <h5>String Read from local storage</h5>
        @StringFromLocalStorage
    </div>
</div>

@code {

    string NameFromLocalStorage { get; set; }
    string StringFromLocalStorage { get; set; }
    int ItemsInLocalStorage { get; set; }
    string Name { get; set; }
    bool ItemExist { get; set; }

    protected override void OnInitialized()
    {
        GetNameFromLocalStorage();
        GetStringFromLocalStorage();
        GetLocalStorageLength();

        localStorage.Changed += (sender, e) =>
        {
            Console.WriteLine($"Value for key {e.Key} changed from {e.OldValue} to {e.NewValue}");
        };
    }

    void SaveName()
    {
        Console.WriteLine(Name);
        localStorage.SetItem("name", Name);
        GetNameFromLocalStorage();
        GetStringFromLocalStorage();
        GetLocalStorageLength();

        Name = "";
    }

    void GetNameFromLocalStorage()
    {
        try
        {
            NameFromLocalStorage = localStorage.GetItem<string>("name");

            if (string.IsNullOrEmpty(NameFromLocalStorage))
            {
                NameFromLocalStorage = "Nothing Saved";
            }
        }
        catch (Exception)
        {
            Console.WriteLine("error reading 'name'");
        }
    }

    void GetStringFromLocalStorage()
    {
        StringFromLocalStorage = localStorage.GetItemAsString("name");

        if (string.IsNullOrEmpty(StringFromLocalStorage))
        {
            StringFromLocalStorage = "Nothing Saved";
        }
    }

    void RemoveName()
    {
        localStorage.RemoveItem("name");
        GetNameFromLocalStorage();
        GetStringFromLocalStorage();
        GetLocalStorageLength();
    }

    void ClearLocalStorage()
    {
        Console.WriteLine("Calling Clear...");
        localStorage.Clear();
        Console.WriteLine("Getting name from local storage...");
        GetNameFromLocalStorage();
        GetStringFromLocalStorage();
        Console.WriteLine("Calling Get Length...");
        GetLocalStorageLength();
    }

    void GetLocalStorageLength()
    {
        Console.WriteLine(localStorage.Length());
        ItemsInLocalStorage = localStorage.Length();
        ItemExist = localStorage.ContainKey("name");
    }

}